<?php
// $Id$

/**
* @file
* Module to hold Lagervarer customization for forums
*/



/** 
 * Implementation of hook_menu().
 */
function lv_forum_menu() {
	return array(
		'forum/fora/alle' => array(
			'type' => MENU_CALLBACK,
			'page callback' => 'lv_forum_all_topics',
			'access arguments' => array('access content'),
		),		 
	);        	 
}        


/**
* Implementation of hook_menu_alter()
*/      
function lv_forum_menu_alter(&$items) {

	$items['profile']['page callback'] = 'lv_forum_user_list';
	   
}


	   
/**
 * Implementation of hook_block().
 */                               
function lv_forum_block($op = 'list', $delta = 0, $edit = array()) {
	switch ($op) {
    
    	case 'list':
        	$blocks[0]['info'] = t('LV: New Users Preview');
        	$blocks[1]['info'] = t('LV: Contacts Preview');
			$blocks[2]['info'] = t('LV: OG Group Admins');
			$blocks[3]['info'] = t('LV: OG Group Members');			
            return $blocks;
            
		case 'view':
			$subjects = array(0 => t('New users'), 1 => t('Contacts'), 2 => t('Admins'), 3 => t('Members'));            
		    global $user;
	    	$blocks['subject'] = $subjects[$delta]; 
			           
			$node = menu_get_object();
			if ($delta == 1 && !in_array('handlende', array_values($user->roles)) && $user->uid != 1) {
				return FALSE;						
			}
			elseif ($delta > 1 && $node->type != 'group' && $node->type != 'group_post') {												
				return FALSE;			
			}	
			
			switch ($delta) {
				case 0:
	       		    $blocks['content'] = _lv_forum_userlist($delta, 0, 12);
					break;
				case 1:
	       		    $blocks['content'] = _lv_forum_userlist($delta, $user, 6, 1);
					break;	  
				case 2:	  
					$blocks['content'] = _lv_forum_userlist($delta, 0, 6, 1, $node);	  
					break;
				case 3:
					$blocks['content'] = _lv_forum_userlist($delta, 0, 6, 2, $node);
					break;
			}													

            return $blocks;

	}
}




function _lv_forum_userlist($delta = 0, $account = 0, $count = 9, $sorting = 0, $node = NULL) {
	if ($node->type == 'group_post') { 
		$node = node_load(key($node->og_groups));
	}

	switch ($delta) {
	case 0:		  
		$more_link = l(t('View all users'), 'brugere');	
		$rs = db_query("SELECT requester_id, requestee_id FROM {user_relationships} WHERE (requester_id = %d OR requestee_id = %d) AND approved = 1 ORDER BY created_at DESC LIMIT %d", $count);        	
		break;
	case 1:
		$more_link = l(t('View all contacts'), 'relationships');			
		$rs = db_query("SELECT requestee_id AS uid FROM {user_relationships} WHERE requester_id = %d AND approved = 1 ORDER BY created_at DESC LIMIT %d", $account->uid, $count);        	
		break;
	case 2:
		$rs = db_query("SELECT uid FROM {og_uid} WHERE nid = %d AND is_active = 1 AND is_admin = 1 ORDER BY created ASC LIMIT %d", $node->nid, $count);        	
		break;
	case 3:
		$more_link = l(t('View all members'), 'og/users/'.$node->nid);			
		$rs = db_query("SELECT uid FROM {og_uid} WHERE nid = %d AND is_active = 1 ORDER BY created DESC LIMIT %d", $node->nid, $count);        	
		break;				
	}		

	$result = '';
	while ($relation = db_fetch_array($rs)) {
		$result .= _lv_forum_thumb($relation['uid']);
	}
	
	$result = '<ul class="lv-user-thumbs">' . $result . '</ul>';
	$result .= isset($more_link) ? '<div class="lv-user-thumbs-link">' . $more_link . '</div>' : '<div style="height: 10px; clear: both"></div>';	
	
	return $result;
		
} 

function _lv_forum_thumb($uid) { 
	$account = user_load($uid);
	$profile = node_load(array('type' => 'profile', 'uid' => $account->uid));
	$result .= '<li><a href="'.url($account->profile_path).'">';
	$result .= isset($profile->field_avatar[0]) ? theme('imagecache', 'thumb50', $profile->field_avatar[0]['filepath'], $account->name, $account->name) : '<img alt="'.$account->name.'" title="'.$account->name.'" src="/sites/all/themes/zenlager/images/avatar-none-50.png" width="50" height="50" />';
	$result .= '</a></li>';
	
	return $result;
} 
	 


function lv_forum_get_topics($forum_per_page, $teaser = false, $page = 0) {
  global $user, $forum_topic_list_header;

  $forum_topic_list_header = array(
    NULL,
    array('data' => t('Topic'), 'field' => 'n.title'),
    array('data' => t('Replies'), 'field' => 'l.comment_count'),
    array('data' => t('Created'), 'field' => 'n.created'),
    array('data' => t('Last reply'), 'field' => 'l.last_comment_timestamp'),
  );

  $order = array('field' => 'l.last_comment_timestamp', 'sort' => 'desc');
  for ($i = 0; $i < count($forum_topic_list_header); $i++) {
    if ($forum_topic_list_header[$i]['field'] == $order['field']) {
      $forum_topic_list_header[$i]['sort'] = $order['sort'];
    }
  }

//  $term = taxonomy_get_term($tid);

  $sql = db_rewrite_sql("SELECT n.nid, r.tid, n.title, n.type, n.sticky, u.name, u.uid, n.created AS timestamp, n.comment AS comment_mode, l.last_comment_timestamp, IF(l.last_comment_uid != 0, cu.name, l.last_comment_name) AS last_comment_name, l.last_comment_uid, l.comment_count AS num_comments, f.tid AS forum_tid FROM {node_comment_statistics} l INNER JOIN {node} n ON n.nid = l.nid INNER JOIN {users} cu ON l.last_comment_uid = cu.uid INNER JOIN {term_node} r ON n.vid = r.vid INNER JOIN {users} u ON n.uid = u.uid INNER JOIN {forum} f ON n.vid = f.vid WHERE n.status = 1");
  $sql .= tablesort_sql($forum_topic_list_header, 'n.sticky DESC,');
  $sql .= ', n.created DESC';  // Always add a secondary sort order so that the news forum topics are on top.

  if ($teaser) {
  	  $sql .= ' LIMIT ' . $forum_per_page;
	  $result = db_query($sql);
  }
  else {
	  $sql_count = db_rewrite_sql("SELECT COUNT(n.nid) FROM {node} n WHERE n.type = 'forum'");
	  $result = pager_query($sql, $forum_per_page, 0, $sql_count);  
  }	  

  $topics = array();
  while ($topic = db_fetch_object($result)) {
    if ($user->uid) {
        $history = _forum_user_last_visit($topic->nid);
        $topic->new_replies = comment_num_new($topic->nid, $history);
        $topic->new = $topic->new_replies || ($topic->timestamp > $history);
    }
    else {
      // Do not track "new replies" status for topics if the user is anonymous.
      $topic->new_replies = 0;
      $topic->new = 0;
    }

    if ($topic->num_comments > 0) {
      $last_reply = new stdClass();
      $last_reply->timestamp = $topic->last_comment_timestamp;
      $last_reply->name = $topic->last_comment_name;
      $last_reply->uid = $topic->last_comment_uid;
      $topic->last_reply = $last_reply;
    }
    $topics[] = $topic;
  }

  return $topics;
}

		   

function lv_forum_preprocess_forum_topic_list(&$variables) {
	if ($variables['topic_id'] === 0) {
	    foreach ($variables['topics'] as $id => $topic) {
    	    $variables['topics'][$id]->moved = FALSE;
   	    	$variables['topics'][$id]->title = l($topic->title, "node/$topic->nid");
    	    $variables['topics'][$id]->message = '';
		}				
	}	
}	


function lv_forum_preprocess_og_mission(&$variables) {
	if (isset($variables['form']['#node']->field_image[0])) {
	  $variables['group_image'] = theme('imagecache', 'sidebar', $variables['form']['#node']->field_image[0]['filepath'], $variables['form']['#node']->field_image[0]['data']['alt']);
	}	
}	   


function lv_forum_all_topics($page = 1) {
	$topics = lv_forum_get_topics(40, false, $page);
	$forums = array();
	$parents = array();
	_advanced_forum_add_files();
	drupal_set_title(t('All forum topics')); 	
	return '<div id="forum"><div class="forum-top-links"><ul class="links forum-links"><li class="first">'.l(t('Choose category'), 'forum').'</li></ul></div>' . theme('forum_topic_list', 0, $topics, 1, (int)$count) . '</div>';
	
}  		


function lv_forum_user_list($page = true, $per_page = 20, $sort = 0) {
	if ($page) { 
		$size = '80';
		$css = '';
	} else {
		$size = '50';
		$css = ' blocklist-teaser';		
	}
	
	$output = '<div class="blocklist user-list'.$css.'">';
	switch ($sort) {
		case 1:
			$sql_order = "u.name ASC";	
			break;
		case 2:
			$sql_order = "u.created DESC";
			break;
		default:
			$sql_order = "a.idx DESC";
			break;			
	}

	$sql = db_rewrite_sql("SELECT n.nid, u.uid, u.name FROM {user_activity} a INNER JOIN ({users_roles} r INNER JOIN ({users} u INNER JOIN {node} n ON (u.uid = n.uid)) ON (r.uid = u.uid)) ON (a.uid = u.uid) WHERE n.type = 'profile' AND u.status = 1 ORDER BY " . $sql_order);	
	$rs = pager_query($sql, $per_page, 0);
	
	while ($row = db_fetch_array($rs)) {
		$profile = node_load($row['nid']);

		$output .= '<div class="listitem">';		
		if (isset($profile->field_avatar[0])) {
		    $output .= '<div class="user-image">'.l(theme('imagecache', 'thumb'.$size, $profile->field_avatar[0]['filepath']), 'node/'.$profile->nid, array('html' => TRUE)).'</div>';
		} else {
		    $output .= '<div class="user-image">'.l('<img src="/sites/all/themes/zenlager/images/avatar-none-'.$size.'.png" width="'.$size.'" height="'.$size.'" />', 'node/'.$profile->nid, array('html' => TRUE)).'</div>';    	
		}                
		
		$output .= '<div class="listitem-title">'.l($row['name'], 'node/'.$profile->nid).'</div><div class="listitem-content">'.lv_pages_trim($profile->field_description[0]['value'], 200).'</div><div style="clear: both;"></div></div>';
	}
	
	$output .= '</div>';
	
	if ($page) {
		drupal_set_title(t('All users'));		
		$breadcrumb = array(l(t('Home'), ''), l(t('Community'), 'forum'));
        drupal_set_breadcrumb($breadcrumb);  		
		$output .= theme('pager');
	}							

	return $output;

} 
